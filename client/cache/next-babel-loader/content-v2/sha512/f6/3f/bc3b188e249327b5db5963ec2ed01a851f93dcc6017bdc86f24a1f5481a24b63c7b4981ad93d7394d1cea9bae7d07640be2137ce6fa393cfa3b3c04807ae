{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Corebiz\\\\Desktop\\\\Miguel\\\\[Github] Projetos\\\\karaoke\\\\contexts\\\\SearchContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nexport var SearchContext = /*#__PURE__*/createContext();\nexport var SearchStorage = function SearchStorage(props) {\n  _s();\n\n  var _useState = useState(null),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  useEffect(function () {\n    console.log(search);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: {\n      search: search,\n      setSearch: setSearch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SearchStorage, \"Ipv2w/Ueqf+N1E2lRh8GSIPgK9A=\");\n\n_c = SearchStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchStorage\");","map":{"version":3,"sources":["C:/Users/Corebiz/Desktop/Miguel/[Github] Projetos/karaoke/contexts/SearchContext.js"],"names":["createContext","useEffect","useState","SearchContext","SearchStorage","props","search","setSearch","console","log","children"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,IAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA;;AAAA,kBAERH,QAAQ,CAAC,IAAD,CAFA;AAAA,MAE7BI,MAF6B;AAAA,MAErBC,SAFqB;;AAIpCN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACA,MAAAA,MAAM,EAANA,MAAD;AAASC,MAAAA,SAAS,EAATA;AAAT,KAA/B;AAAA,cACIF,KAAK,CAACK;AADV;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAbM;;GAAMN,a;;KAAAA,a","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const SearchContext = createContext();\r\n\r\nexport const SearchStorage = props => {\r\n\r\n  const [search, setSearch] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(search)\r\n  }, [search])\r\n\r\n  return (\r\n    <SearchContext.Provider value={{search, setSearch}}>\r\n      { props.children }\r\n    </SearchContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}